#pragma kernel CSMain

// Buffers
RWStructuredBuffer<float> inputBuffer;
RWStructuredBuffer<float> weightBuffer;
RWStructuredBuffer<float> biasBuffer;
RWStructuredBuffer<float> outputBuffer;

int inputSize;

[numthreads(1, 1, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float result = 0.0f;

    // Reduce operation for vector sum
    [unroll]
    for (int i = 0; i < inputSize; i++)
    {
        result += inputBuffer[i] * weightBuffer[id.x * inputSize + i];
    }

    result += biasBuffer[id.x];
    
    // Use built-in tanh function
    float tanhResult = tanh(result);
    
    outputBuffer[id.x] = tanhResult;
}
